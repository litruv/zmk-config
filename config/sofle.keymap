/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        CustomEvent: CustomEvent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TAB &kp LS(A) &kp D &kp D &kp SPACE &kp LS(C) &kp U &kp S &kp T &kp O &kp M &kp SPACE &kp LS(E) &kp V &kp E &kp N &kp T &kp DOT &kp DOT &kp DOT &kp ENTER>;
            label = "CUSTOMEVENT";
            wait-ms = <5>;
            tap-ms = <5>;
        };

        PrintString: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TAB &kp LS(P) &kp R &kp I &kp N &kp T &kp SPACE &kp LS(S) &kp T &kp R &kp I &kp N &kp G &kp ENTER>;
            label = "NEW_MACRO";
        };

        DCancelA: DCancelA {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp A>,
                <&macro_press>,
                <&kp D>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp D>,
                <&macro_press>,
                <&kp A>;

            label = "DCANCELA";
        };

        ACancelD: ACancelD {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp D>,
                <&macro_press>,
                <&kp A>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp A>,
                <&macro_press>,
                <&kp D>;

            label = "ACANCELD";
        };
    };

    combos {
        compatible = "zmk,combos";

        BackspaceOnLeft {
            bindings = <&kp BACKSPACE>;
            key-positions = <24 36>;
        };

        ComboDelete {
            bindings = <&kp DELETE>;
            key-positions = <53 54>;
        };

        NextDesktop {
            bindings = <&kp LG(LC(RIGHT_ARROW))>;
            key-positions = <4 5>;
            require-prior-idle-ms = <1000>;
        };

        PreviousDesktop {
            bindings = <&kp LC(LG(LEFT_ARROW))>;
            key-positions = <4 3>;
            require-prior-idle-ms = <1000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  BSPC |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |  DEL  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | CTRL| WIN  | ALT  | LOWER|  SPACE |  | ENTER | RAISE| ALT   | WIN   | CTRL |

            bindings = <
&mt GRAVE ESCAPE  &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                           &kp N6  &kp N7         &kp N8     &kp N9     &kp N0    &kp BSPC
&kp TAB           &kp Q   &kp W      &kp E     &kp R     &kp T                            &kp Y   &kp U          &kp I      &kp O      &kp P     &kp DEL
&mo 4             &kp A   &kp S      &kp D     &kp F     &kp G                            &kp H   &kp J          &kp K      &kp L      &kp SEMI  &kp SQT
&kp LEFT_SHIFT    &kp Z   &kp X      &kp C     &kp V     &kp B   &kp LC(V)    &kp C_MUTE  &kp N   &kp M          &kp COMMA  &kp DOT    &kp FSLH  &kp RSHFT
                          &kp LCTRL  &kp LGUI  &kp LALT  &mo 1   &kp SPACE    &kp RET     &mo 2   &kp RIGHT_ALT  &kp RGUI   &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp LC(RIGHT) LC(LEFT)>, <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            display-name = "Lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F1     &kp F2         &kp F3          &kp F4     &kp F5               &kp F6                                 &trans  &trans  &trans  &trans  &trans  &trans
&kp F9     &none          &kp UP_ARROW    &kp LC(E)  &CustomEvent         &mt LA(S) LA(P)                        &trans  &trans  &trans  &trans  &trans  &trans
&mo 5      &kp LEFT       &kp DOWN_ARROW  &kp RIGHT  &mt LC(LS(F)) LC(F)  &PrintString                           &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp LC(SLASH)  &none           &none      &none                &kp LC(B)        &kp ESCAPE    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                          &none           &none      &kp ENTER            &trans           &trans        &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN>, <&inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "Upper";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &kp F7     &kp F8    &kp F9    &kp F10    &kp F11           &kp F12
&trans      &trans        &trans        &trans        &trans        &trans                                   &kp PG_UP  &kp HOME  &kp UP    &kp END    &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &trans        &trans        &trans        &trans        &trans                                   &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp MINUS         &kp EQUAL
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &kp PRINTSCREEN  &trans     &trans    &trans    &trans     &kp BACKSLASH     &trans
                          &trans        &trans        &trans        &trans        &trans    &trans           &trans     &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp A B>, <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "Adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };

        Opposites {
            bindings = <
&kp BACKSPACE  &kp N6  &kp N7     &kp N8     &kp N9            &kp N0                                   &trans     &trans  &trans  &trans  &trans  &trans
&kp DEL        &kp Y   &kp U      &kp I      &kp O             &kp P                                    &trans     &trans  &trans  &trans  &trans  &trans
&trans         &kp H   &kp J      &kp K      &kp L             &kp SEMI                                 &kp RSHFT  &trans  &trans  &trans  &trans  &trans
&kp LSHFT      &kp N   &kp M      &kp COMMA  &kp DOT           &kp FSLH           &kp ESCAPE    &trans  &trans     &trans  &trans  &trans  &trans  &trans
                       &kp EQUAL  &kp MINUS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RET       &trans  &trans     &trans  &trans  &trans
            >;

            label = "Opposites";
            sensor-bindings = <&inc_dec_kp DOWN UP>;
        };

        OppositeFunctions {
            bindings = <
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans   &trans                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans   &trans                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans   &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans   &trans   &trans   &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "Opp Func";
        };
    };
};
